name: Publish to npm

on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  publish-sdk:
    name: Publish lix-cache-sdk
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: lix-cache-sdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
          cache-dependency-path: 'lix-cache-sdk/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build SDK
        run: pnpm build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-server:
    name: Publish lix-cache-server
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: lix-cache-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish-sdk, publish-server]
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: v${{ steps.version.outputs.version }}
          body: |
            ## Lix Cache v${{ steps.version.outputs.version }}

            ### ðŸ“¦ Published Packages
            - **npm:** `lix-cache-sdk@${{ steps.version.outputs.version }}`
            - **npm:** `lix-cache-server@${{ steps.version.outputs.version }}`
            - **Docker:** `ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}`

            ### Installation
            ```bash
            npm install lix-cache-sdk@${{ steps.version.outputs.version }}
            # or
            docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
            ```

            See [README](https://github.com/${{ github.repository }}) for full documentation.
          draft: false
          prerelease: false
